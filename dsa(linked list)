1)insertion all cases

  #include <bits/stdc++.h>
using namespace std;

struct Node{
    int data;
    Node* next;
};

Node* head=nullptr;

void insert_at_beginning(int val){
    Node* newnode=new Node;
    newnode->data=val;
    newnode->next=head;
    head=newnode;
}

void insert_at_end(int val){
    Node* newnode=new Node;
    newnode->data=val;
    newnode->next=nullptr;
    if(head==nullptr){
        head=newnode;
        return;
    }
    Node* temp=head;
    while(temp->next!=nullptr){
        temp=temp->next;
    }
    temp->next=newnode;
}

void insert_at_position(int pos,int val){
    Node* newnode=new Node;
    newnode->data=val;
    if(pos==1){
        newnode->next=head;
        head=newnode;
        return;
    }
    Node* temp=head;
    for(int i=1;temp!=nullptr && i<pos-1;i++){
        temp=temp->next;
    }
    newnode->next=temp->next;
    if(temp==nullptr){
        cout<<"Index out of bounds"<<endl;
    }
    newnode->next=temp->next;
    temp->next=newnode;
}

void print_list(){
    Node* temp=head;
    while(temp!=nullptr){
        cout<<" "<<temp->data;
        temp=temp->next;
    }
    cout<<endl;
}

int main(){
    insert_at_beginning(2);
    insert_at_beginning(3);
    insert_at_end(4);
    insert_at_position(1,5);
    print_list();
}

2)deletion all cases

#include <bits/stdc++.h>
using namespace std;

struct Node{
    int data;
    Node *next;
};

Node* head=nullptr;

void delete_at_end(){
    Node* temp=head;
    if(head==nullptr){
        return;
    }
    if(head->next==nullptr){
        delete head;
        head=nullptr;
        return;
    }
    while(temp->next->next!=nullptr){
        temp=temp->next;
    }
    delete temp->next;
    temp->next=nullptr;
}
    
void delete_at_beginning(){
    Node* temp=head;
    if(head==nullptr){
        return;
    }
    head=head->next;
    delete temp;
}

void delete_at_pos(int pos){
    if(head==nullptr){
        return;
    }
    if(pos==1){
        Node* place=head;
        head=head->next;
        delete place;
        return;
    }
    Node* temp=head;
    for(int i=1;temp!=nullptr && i<pos-1;i++){
        temp=temp->next;
    } 
    if(temp==nullptr||temp->next==nullptr){
        return;
    }
    Node* place=temp->next;
    temp->next=temp->next->next;
    delete place;
}
