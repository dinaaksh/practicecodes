Sorting:

1)selection sort

#include <bits/stdc++.h>
using namespace std;

void selection_sort(int arr[],int n){
    for(int i=0;i<n-1;i++){
        int min=i;
        for(int j=i+1;j<n;j++){
            if(arr[min]>arr[j]){
                min=j;
            }
        }
        swap(arr[i],arr[min]);
    }
}

int main(){
    int arr[]={2,3,1,4};
    int n=4;
    selection_sort(arr,n);
    for(int i=0;i<n;i++){
        cout<<arr[i]<<" ";
    }
}

2)bubble sort

#include <bits/stdc++.h>
using namespace std;

void bubble_sort(int arr[],int n){
    for(int i=n-1;i>=0;i--){
        int pass=0;
        for(int j=0;j<=i-1;j++){
            if(arr[j]>arr[j+1]){
                swap(arr[j],arr[j+1]);
                pass=1;
            }
        }
        if(pass==0) return;
    }
}

int main(){
    int arr[]={2,3,1,4};
    int n=4;
    bubble_sort(arr,n);
    for(int i=0;i<n;i++){
        cout<<arr[i]<<" ";
    }
}

3)insertion sort

#include <bits/stdc++.h>
using namespace std;

void insertion_sort(int arr[],int n){
    for(int i=0;i<n;i++){
        int j=i;
        while(j>0 && arr[j]<arr[j-1]){
            swap(arr[j],arr[j-1]);
            j--;
        }
    }
}

int main(){
    int arr[]={2,3,1,4};
    int n=4;
    insertion_sort(arr,n);
    for(int i=0;i<n;i++){
        cout<<arr[i]<<" ";
    }
}

4)quick sort

#include <bits/stdc++.h>
using namespace std;

int partition(int arr[],int p,int q){
    int x=arr[p];
    int i=p;
    for(int j=p+1;j<=q;j++){
        if(arr[j]<=x){
            i++;
            swap(arr[i],arr[j]);
        }
    }
    swap(arr[i],arr[p]);
    return i;
}

void quicksort(int arr[],int p,int q){
    if(p<q){
        int m=partition(arr,p,q);
        quicksort(arr,p,m-1);
        quicksort(arr,m+1,q);
    }
}

int main(){
    int arr[]={2,4,1,3};
    int n=sizeof(arr)/sizeof(arr[0]);
    int p=0,q=n-1;
    quicksort(arr,p,q);
    for(int i=0;i<n;i++){
        cout<<arr[i]<<" ";
    }
}
